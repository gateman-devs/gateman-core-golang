{
  "title": "Gateman API Documentation",
  "description": "Complete API reference for Gateman biometric verification services",
  "version": "1.0.0",
  "baseUrl": "https://api.gateman.io",
  "sections": [
    {
      "id": "getting-started",
      "title": "Getting Started",
      "description": "Learn how to get started with Gateman API",
      "pages": [
        {
          "id": "introduction",
          "title": "Introduction",
          "type": "page",
          "description": "Overview of the Gateman API"
        },
        {
          "id": "authentication",
          "title": "Authentication",
          "type": "page",
          "description": "How to authenticate with the API"
        }
      ]
    },
    {
      "id": "biometric-verification",
      "title": "Biometric Verification",
      "description": "Face recognition and biometric verification endpoints",
      "pages": [
        {
          "id": "face-comparison-endpoint",
          "title": "Face Comparison",
          "type": "endpoint",
          "description": "Compare two face images and return similarity score"
        },
        {
          "id": "liveness-check-endpoint",
          "title": "Liveness Check",
          "type": "endpoint",
          "description": "Analyze facial movements to detect liveness"
        }
      ]
    },
    {
      "id": "identity-verification",
      "title": "Identity Verification",
      "description": "Document verification and identity services",
      "pages": [
        {
          "id": "document-scan-endpoint",
          "title": "Document Scan",
          "type": "endpoint",
          "description": "Extract data from government-issued documents"
        },
        {
          "id": "face-document-match-endpoint",
          "title": "Face-Document Match",
          "type": "endpoint",
          "description": "Verify if face matches document photo"
        }
      ]
    },
    {
      "id": "webhooks",
      "title": "Webhooks",
      "description": "Real-time event notifications",
      "pages": [
        {
          "id": "webhook-setup",
          "title": "Webhook Configuration",
          "type": "page",
          "description": "Set up webhooks for event notifications"
        }
      ]
    }
  ],
  "apiKey": {
    "description": "Your API key for authentication",
    "placeholder": "your_api_key_here",
    "required": true
  },
  "appId": {
    "description": "Your application identifier",
    "placeholder": "your_app_id_here",
    "required": true
  },
  "defaultHeaders": {
    "Content-Type": "application/json",
    "X-API-Key": "{api_key}",
    "X-App-ID": "{app_id}"
  },
  "endpoints": [
    {
      "id": "face-comparison-endpoint",
      "title": "Face Comparison",
      "method": "POST",
      "path": "/biometric/face/compare",
      "description": "Compare two face images and return similarity score",
      "category": "Biometric Verification",
      "headers": {
        "X-API-Key": "{api_key}",
        "X-App-ID": "{app_id}",
        "Content-Type": "multipart/form-data"
      },
      "requestBody": {
        "type": "object",
        "properties": {
          "face1": {
            "type": "string",
            "format": "binary",
            "description": "First face image file"
          },
          "face2": {
            "type": "string",
            "format": "binary",
            "description": "Second face image file"
          },
          "threshold": {
            "type": "number",
            "description": "Similarity threshold (0-1)",
            "default": 0.8
          }
        },
        "required": ["face1", "face2"]
      },
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "properties": {
              "similarity": {
                "type": "number",
                "description": "Similarity score between 0 and 1"
              },
              "match": {
                "type": "boolean",
                "description": "Whether faces match above threshold"
              },
              "confidence": {
                "type": "number",
                "description": "Confidence level of the match"
              }
            }
          }
        },
        "400": {
          "description": "Bad Request - Invalid input"
        },
        "401": {
          "description": "Unauthorized"
        }
      },
      "example": {
        "request": {
          "face1": "image1.jpg",
          "face2": "image2.jpg",
          "threshold": 0.8
        },
        "response": {
          "similarity": 0.92,
          "match": true,
          "confidence": 0.95
        }
      }
    },
    {
      "id": "liveness-check-endpoint",
      "title": "Liveness Check",
      "method": "POST",
      "path": "/biometric/liveness/check",
      "description": "Analyze facial movements to detect if the person is live",
      "category": "Biometric Verification",
      "headers": {
        "X-API-Key": "{api_key}",
        "X-App-ID": "{app_id}",
        "Content-Type": "multipart/form-data"
      },
      "requestBody": {
        "type": "object",
        "properties": {
          "video": {
            "type": "string",
            "format": "binary",
            "description": "Video file for liveness analysis"
          },
          "challenge_type": {
            "type": "string",
            "enum": ["blink", "smile", "turn_head"],
            "description": "Type of liveness challenge"
          }
        },
        "required": ["video"]
      },
      "responses": {
        "200": {
          "description": "Success",
          "schema": {
            "type": "object",
            "properties": {
              "is_live": {
                "type": "boolean",
                "description": "Whether the person appears to be live"
              },
              "confidence": {
                "type": "number",
                "description": "Confidence score of liveness detection"
              },
              "challenge_completed": {
                "type": "boolean",
                "description": "Whether the challenge was successfully completed"
              }
            }
          }
        }
      },
      "example": {
        "request": {
          "video": "liveness_video.mp4",
          "challenge_type": "blink"
        },
        "response": {
          "is_live": true,
          "confidence": 0.98,
          "challenge_completed": true
        }
      }
    },
    {
      "id": "document-scan-endpoint",
      "title": "Document Scan",
      "method": "POST",
      "path": "/identity/document/scan",
      "description": "Extract data from government-issued documents",
      "category": "Identity Verification",
      "headers": {
        "X-API-Key": "{api_key}",
        "X-App-ID": "{app_id}",
        "Content-Type": "multipart/form-data"
      },
      "requestBody": {
        "type": "object",
        "properties": {
          "document_image": {
            "type": "string",
            "format": "binary",
            "description": "Image of the document to scan"
          },
          "document_type": {
            "type": "string",
            "enum": ["passport", "drivers_license", "id_card"],
            "description": "Type of document being scanned"
          }
        },
        "required": ["document_image", "document_type"]
      },
      "responses": {
        "200": {
          "description": "Document scanned successfully",
          "schema": {
            "type": "object",
            "properties": {
              "document_type": {"type": "string"},
              "extracted_data": {
                "type": "object",
                "properties": {
                  "full_name": {"type": "string"},
                  "document_number": {"type": "string"},
                  "date_of_birth": {"type": "string"},
                  "date_of_expiry": {"type": "string"},
                  "issuing_country": {"type": "string"}
                }
              },
              "confidence_scores": {
                "type": "object",
                "description": "Confidence scores for each extracted field"
              }
            }
          }
        }
      },
      "example": {
        "request": {
          "document_image": "passport.jpg",
          "document_type": "passport"
        },
        "response": {
          "document_type": "passport",
          "extracted_data": {
            "full_name": "JOHN DOE",
            "document_number": "P123456789",
            "date_of_birth": "1990-01-15",
            "date_of_expiry": "2030-01-15",
            "issuing_country": "US"
          },
          "confidence_scores": {
            "full_name": 0.98,
            "document_number": 0.95,
            "date_of_birth": 0.92
          }
        }
      }
    },
    {
      "id": "face-document-match-endpoint",
      "title": "Face-Document Match",
      "method": "POST",
      "path": "/identity/face-document/match",
      "description": "Verify if a face matches the photo on a document",
      "category": "Identity Verification",
      "headers": {
        "X-API-Key": "{api_key}",
        "X-App-ID": "{app_id}",
        "Content-Type": "multipart/form-data"
      },
      "requestBody": {
        "type": "object",
        "properties": {
          "face_image": {
            "type": "string",
            "format": "binary",
            "description": "Face image to compare"
          },
          "document_image": {
            "type": "string",
            "format": "binary",
            "description": "Document image containing photo"
          },
          "threshold": {
            "type": "number",
            "description": "Similarity threshold (0-1)",
            "default": 0.7
          }
        },
        "required": ["face_image", "document_image"]
      },
      "responses": {
        "200": {
          "description": "Match analysis completed",
          "schema": {
            "type": "object",
            "properties": {
              "match": {
                "type": "boolean",
                "description": "Whether face matches document photo"
              },
              "similarity": {
                "type": "number",
                "description": "Similarity score between face and document photo"
              },
              "confidence": {
                "type": "number",
                "description": "Confidence level of the analysis"
              }
            }
          }
        }
      },
      "example": {
        "request": {
          "face_image": "selfie.jpg",
          "document_image": "passport.jpg",
          "threshold": 0.7
        },
        "response": {
          "match": true,
          "similarity": 0.85,
          "confidence": 0.91
        }
      }
    }
  ],
  "pages": {
    "introduction": {
      "title": "Introduction",
      "description": "Welcome to Gateman API",
      "content": [
        {
          "type": "intro",
          "title": "Welcome to Gateman",
          "text": "Gateman provides advanced biometric verification and identity verification services through our comprehensive API."
        },
        {
          "type": "section",
          "title": "Key Features",
          "text": "Our API offers:",
          "items": [
            "Face comparison and recognition",
            "Liveness detection",
            "Document verification",
            "Biometric matching",
            "Real-time webhook notifications"
          ]
        }
      ]
    },
    "authentication": {
      "title": "Authentication",
      "description": "How to authenticate with the Gateman API",
      "content": [
        {
          "type": "intro",
          "title": "API Authentication",
          "text": "All API requests require authentication using your API key and App ID."
        },
        {
          "type": "section",
          "title": "Required Headers",
          "text": "Include these headers in all API requests:",
          "items": [
            "X-API-Key: Your API key",
            "X-App-ID: Your application identifier",
            "Content-Type: application/json (or multipart/form-data for file uploads)"
          ]
        }
      ]
    },
    "webhook-setup": {
      "title": "Webhook Configuration",
      "description": "Set up webhooks for real-time event notifications",
      "content": [
        {
          "type": "intro",
          "title": "Webhook Integration",
          "text": "Webhooks allow you to receive real-time notifications when verification events occur."
        }
      ]
    }
  }
}
