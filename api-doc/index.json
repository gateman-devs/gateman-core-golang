{
  "title": "Gateman API Documentation",
  "description": "Complete API reference for Gateman biometric verification services",
  "version": "1.0.0",
  "baseUrl": "https://api.gateman.io",
  "sections": [
    {
      "id": "getting-started",
      "title": "Getting Started",
      "description": "Quick guide to start using Gateman API",
      "pages": [
        {
          "id": "introduction",
          "title": "Introduction",
          "type": "page",
          "description": "Overview of the Gateman API"
        },
        {
          "id": "authentication",
          "title": "Authentication",
          "type": "page",
          "description": "How to authenticate with the API"
        }
      ]
    },
    {
      "id": "biometric-verification",
      "title": "Biometric Verification",
      "description": "Check if two faces match or if a person is real (not a photo/video)",
      "pages": [
        {
          "id": "face-comparison-endpoint",
          "title": "Face Comparison",
          "type": "endpoint",
          "description": "Compare two faces to see if they are the same person"
        },
        {
          "id": "liveness-check-endpoint",
          "title": "Liveness Check",
          "type": "endpoint",
          "description": "Check if the person in the photo is real (not a fake image or video)"
        }
      ]
    }
  ],
  "apiKey": {
    "description": "Your secret key to access the API",
    "placeholder": "your_api_key_here",
    "required": true
  },
  "appId": {
    "description": "Your app's unique ID",
    "placeholder": "your_app_id_here",
    "required": true
  },
  "defaultHeaders": {
    "Content-Type": "application/json",
    "x-api-key": "{api_key}",
    "x-app-id": "{app_id}"
  },
  "endpoints": [
    {
      "id": "face-comparison-endpoint",
      "title": "Face Comparison",
      "method": "POST",
      "path": "/api/public/v1/biometric/liveness-check",
      "description": "Compare two faces and see if they match (use URLs or base64 images)",
      "category": "Biometric Verification",
      "headers": {
        "x-api-key": "{api_key}",
        "x-app-id": "{app_id}",
        "Content-Type": "application/json"
      },
      "requestBody": {
        "type": "object",
        "properties": {
          "image1": {
            "type": "string",
            "format": "string",
            "description": "Image URL or base64 string"
          },
          "image2": {
            "type": "string",
            "format": "string",
            "description": "Image URL or base64 string"
          },
          "threshold": {
            "type": "number",
            "description": "Similarity threshold (0-1)",
            "default": 0.8
          }
        },
        "required": ["image1", "image2"]
      },
      "responses": {
        "200 - Match Success": {
          "description": "Success",
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "is_match": true,
                "similarity": 0.5738323359758971,
                "confidence": 0.5738323359758971,
                "processing_time_ms": 3748,
                "reference_liveness": null,
                "test_liveness": null,
                "liveness_process_time_ms": 0,
                "request_id": "",
                "timestamp": "2025-10-08T23:13:59.802387+01:00"
              },
              "message": "Enhanced face comparison completed"
            }
          }
        },
        "200 - Match Failed": {
          "description": "Bad Request - Invalid input",
          "schema": {
            "type": "object",
            "properties": {
              "body": {
                "is_match": false,
                "similarity": 0.5738323359758971,
                "confidence": 0.5738323359758971,
                "processing_time_ms": 2625,
                "reference_liveness": null,
                "test_liveness": null,
                "liveness_process_time_ms": 0,
                "request_id": "",
                "timestamp": "2025-10-08T23:13:33.394071+01:00"
              },
              "message": "Enhanced face comparison completed"
            }
          }
        }
      },
      "example": {
        "request": {
          "face1": "https://res.cloudinary.com/themizehq/image/upload/v1705754919/b3660e9e-4bed-4063-8400-88f5e109aacb.jpg",
          "face2": "https://res.cloudinary.com/themizehq/image/upload/v1705754919/b3660e9e-4bed-4063-8400-88f5e109aacb.jpg",
          "threshold": 0.8
        },
        "response": {
          "body": {
            "is_match": true,
            "similarity": 0.5738323359758971,
            "confidence": 0.5738323359758971,
            "processing_time_ms": 3218,
            "reference_liveness": null,
            "test_liveness": null,
            "liveness_process_time_ms": 0,
            "feature_quality": {
              "face_size_percent": 97.262930338731,
              "face_position": "center",
              "image_sharpness": 0.9726293033873099,
              "lighting_quality": 0.9726293033873099,
              "feature_strength": 0.5738323359758971
            },
            "comparison_metadata": {
              "similarity_method": "yunet_facenet",
              "threshold_used": 0.1,
              "quality_adjustment": 0,
              "confidence_level": "high",
              "feature_strength": 0.5738323359758971,
              "processing_steps": [
                {
                  "step": "face_detection",
                  "duration_ms": 1609,
                  "success": true,
                  "details": "Faces detected successfully"
                },
                {
                  "step": "face_comparison",
                  "duration_ms": 1609,
                  "success": true,
                  "details": "Face comparison completed (threshold: 0.10, match: true)"
                }
              ]
            },
            "request_id": "",
            "timestamp": "2025-10-08T23:02:50.031014+01:00"
          },
          "message": "Enhanced face comparison completed"
        }
      }
    },
    {
      "id": "liveness-check-endpoint",
      "title": "Liveness Check",
      "method": "POST",
      "path": "/api/public/v1/biometric/liveness-check",
      "description": "Detect if a face photo is from a real person or a fake/spoofed image",
      "category": "Biometric Verification",
      "headers": {
        "X-API-Key": "{api_key}",
        "X-App-ID": "{app_id}",
        "Content-Type": "application/json"
      },
      "requestBody": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "string",
            "description": "Image url for liveness analysis"
          },
          "verbose": {
            "type": "boolean",
            "description": "Enable verbose analysis reporting"
          },
          "threshold": {
            "type": "number",
            "description": "Similarity threshold (0-1)",
            "default": 0.8
          }
        },
        "required": ["image"]
      },
      "responses": {
        "200 - Liveness Check Success": {
          "description": "Success",
          "schema": {
            "body": {
              "is_live": true,
              "liveness_score": 0.630642772668024,
              "threshold_used": 0.6,
              "spoof_score": 0,
              "confidence": 0.7059458932353999,
              "processing_time_ms": 2960,
              "request_id": "",
              "timestamp": "2025-10-08T22:45:23.428105+01:00"
            },
            "message": "Enhanced liveness check completed"
          }
        },
        "200 - Liveness Check Failed": {
          "description": "Success",
          "schema": {
            "body": {
              "is_live": false,
              "liveness_score": 0.630642772668024,
              "threshold_used": 0.7,
              "spoof_score": 0,
              "confidence": 0.7059458932353999,
              "processing_time_ms": 4032,
              "request_id": "",
              "timestamp": "2025-10-08T22:42:10.54574+01:00"
            },
            "message": "Enhanced liveness check completed"
          }
        }
      },
      "example": {
        "request": {
          "image": "https://res.cloudinary.com/themizehq/image/upload/v1705754919/b3660e9e-4bed-4063-8400-88f5e109aacb.jpg",
          "verbose": true,
          "threshold": 0.7
        },
        "response": {
          "body": {
            "is_live": true,
            "liveness_score": 0.630642772668024,
            "threshold_used": 0.6,
            "spoof_score": 0,
            "confidence": 0.7059458932353999,
            "processing_time_ms": 2732,
            "analysis_breakdown": {
              "lbp_score": 0.876964,
              "lpq_score": 0.559192,
              "reflection_consistency": 0.72831547208,
              "color_space_analysis": {
                "rgb_variance": 0.53252,
                "hsv_variance": 0.718417,
                "lab_variance": 0.256634
              },
              "edge_analysis": {
                "edge_density": 0.4940092989985694,
                "edge_sharpness": 1,
                "edge_consistency": 1
              },
              "frequency_analysis": {
                "high_frequency": 1,
                "mid_frequency": 0.7,
                "low_frequency": 0.3,
                "compression_artifacts": 0
              },
              "texture_analysis": {
                "texture_variance": 0.32093790278986795,
                "texture_uniformity": 0.564579414839498,
                "texture_entropy": 0.9116036888648632
              }
            },
            "quality_metrics": {
              "resolution": "unknown",
              "sharpness": 1,
              "brightness": 0.66415773604,
              "contrast": 0.66415773604,
              "face_size_percent": 75.10104018912529,
              "face_position": {
                "x": 0.5,
                "y": 0.5
              },
              "compression_level": 0,
              "quality_score": 0.7510104018912529
            },
            "recommendations": [
              "Ensure good lighting conditions",
              "Keep face centered in frame",
              "Avoid reflections and shadows"
            ],
            "request_id": "",
            "timestamp": "2025-10-08T22:44:51.27309+01:00"
          },
          "message": "Enhanced liveness check completed"
        }
      }
    }
  ],
  "pages": {
    "introduction": {
      "content": "---\ntitle: 'Introduction'\ndescription: 'Welcome to the Gateman API Documentation where you'll learn how to build secure and reliable applications with the Gateman API.'\n---\n\n## Getting Started\n\nTo use the Gateman API, you'll need a Gateman account. If you don't have one yet, you can create an account [here](https://gateman.io).\n\nOnce your account is set up, you can access the API using the following base URLs:\n\n- **Production Environment**: `https://api.gateman.io`  \n- **Sandbox Environment**: `https://sandbox.gateman.io`  \n\nThe Sandbox environment is recommended for testing and development, while the Production environment is for live applications.\n\n## Authentication\n\nAll Gateman API endpoints require authentication using an **API Key** and **API ID**. These credentials must be included in the headers of every request.\n\nYou can retrieve your API Key and API ID from the **Settings** page on your [Gateman Dashboard](https://gateman.io).\n\n### Example Request Headers\n\n```json\n{\n  \"x-api-key\": \"your-sandbox-api-key\",\n  \"x-app-id\": \"your-sandbox-app-id\"\n}\n```"
    },
    "authentication": {
      "content": "---\ntitle: 'Authentication'\ndescription: 'How to authenticate with the API'\n---\n\n# API Authentication\n\nAll API requests require authentication using your API key and App ID.\n\n## Required Headers\n\nInclude these headers in all API requests:\n\n- X-API-Key: Your API key\n- X-App-ID: Your application identifier\n- Content-Type: application/json (or multipart/form-data for file uploads)"
    },
    "webhook-setup": {
      "content": "---\ntitle: 'Webhook Configuration'\ndescription: 'Get notified instantly when things happen'\n---\n\n# Webhook Integration\n\nWebhooks allow you to receive real-time notifications when verification events occur."
    }
  }
}